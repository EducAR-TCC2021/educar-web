{"version":3,"sources":["components/Logo.jsx","components/TopMenu.jsx","state/slices/settings.js","components/PaletteTypeButton.jsx","state/slices/account.js","pages/login/SketchfabLoginButton.jsx","pages/login/LoginCard.jsx","pages/login/Login.jsx","pages/login/index.js","components/NextPageButton.jsx","components/PageTitle.jsx","components/ProfileDropdown.jsx","state/queries/scenes.js","state/slices/editor.js","state/slices/home.js","pages/marker/MarkerPreview.jsx","pages/marker/MarkerSelectionContainer.jsx","pages/home/AddMarkerDialog.jsx","state/requests/channel.js","pages/home/AddSceneCard.jsx","pages/home/AddChannelDialog.jsx","pages/home/ChannelMoreMenu.jsx","pages/home/HomeDrawer.jsx","pages/home/SceneCard.jsx","pages/home/Home.jsx","pages/home/index.js","pages/marker/MarkerSelection.jsx","pages/marker/index.js","pages/editor/modal/ImagePreview.jsx","utils/index.js","pages/editor/modal/ModelPreview.jsx","pages/editor/modal/AddOverlayModal.jsx","pages/editor/fiber/TransformController.jsx","pages/editor/fiber/Image.jsx","pages/editor/fiber/Model.jsx","pages/editor/fiber/Overlay.jsx","state/store.js","pages/editor/fiber/Scene.jsx","pages/editor/EditorViewport.jsx","pages/editor/IconTool.jsx","pages/editor/SideSubMenu.jsx","pages/editor/OverlayMenuItem.jsx","pages/editor/OverlayMenu.jsx","pages/editor/SceneTextField.jsx","pages/editor/SideMenu.jsx","pages/editor/SaveSceneButton.jsx","pages/editor/Editor.jsx","pages/editor/index.js","App.jsx","serviceWorker.js","index.jsx"],"names":["Logo","to","style","textDecoration","color","Typography","variant","useStyles","makeStyles","title","display","justifyContent","padding","marginLeft","appBar","zIndex","TopMenu","children","hideLogo","position","classes","AppBar","className","Toolbar","Container","defaultProps","prefersDarkMode","window","matchMedia","matches","settings","createSlice","name","initialState","paletteType","reducers","setPaletteType","state","action","payload","togglePaletteType","settingsActions","Object","actions","settingsSelectors","renderIcon","Brightness4","Brightness7","PaletteTypeButton","useSelector","store","useStore","IconButton","onClick","dispatch","account","accessToken","userLoggedIn","userLoggedOff","setScenes","scenes","accountActions","accountSelectors","entities","channels","SKETCHFAB_URL","theme","submit","marginTop","spacing","margin","SketchfabLoginButton","useState","windowReference","setWindowReference","useEffect","opener","hashParams","URL","location","hash","split","token","forEach","param","indexOf","replace","getAccessToken","error","URLSearchParams","search","get","postMessage","source","close","receiveMessage","event","origin","data","removeEventListener","Button","type","fullWidth","y","top","outerHeight","screenY","x","outerWidth","screenX","closed","ref","open","focus","addEventListener","root","width","textAlign","pos","marginBottom","form","LoginCard","Card","CardContent","component","noValidate","loginCard","Login","NextPageButton","redirectTo","disabled","history","useHistory","push","pageTitle","PageTitle","maxWidth","ProfileDropdown","React","anchorEl","setAnchorEl","handleClose","currentTarget","AccountCircle","Menu","id","keepMounted","Boolean","onClose","MenuItem","selectScenes","scenesSelectors","createSelector","keys","map","idx","thumbnail","trigger","modesEnum","typeEnums","src","isValid","overlay_selection","controlMode","overlays","isNewScene","addOverlayModal","isAddingOverlay","blobFiles","editor","setMarkerSrc","setValidMarker","setInvalidMarker","setStateFromScene","scene","setOverlaySelection","setControlMode","setOverlayTransform","posRotScale","rotation","scale","setIsAddingOverlay","setAddOverlaySrc","setAddOverlayIsValid","setAddOverlayType","addOverlay","z","url","removeOverlay","splice","setBlobFile","key","value","clearEditorState","setName","editorActions","editorSelectors","sceneId","sceneInfo","home","selectedChannelIndex","setSelectedChannelIndex","homeActions","homeSelectors","imgContainer","alignItems","height","img","maxHeight","MarkerPreview","imgExists","setImgExists","alertUndownloadable","setAlertUndownloadable","a","fetch","ok","checkIfDownloadable","Paper","square","alt","onLoad","Snackbar","autoHideDuration","severity","TransitionComponent","Slide","message","content","MarkerSelectionContainer","markerSrcValue","TextField","required","label","autoFocus","onChange","e","v","target","minWidth","AddMarkerDialog","useDispatch","Dialog","DialogContent","DialogActions","BASE_URL","channelRequests","updateScene","channelId","method","baseURL","headers","authorizationToken","createChannel","password","deleteChannel","cardDesign","backgroundColor","card","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","editingCardContent","buttonBase","EditingCard","setState","handleOpenMarker","selectedChannel","sceneName","setSceneName","ButtonBase","CardMedia","image","placeholder","CardActions","size","request","axios","then","catch","BlankCard","Add","AddSceneCard","CardSelector","Grid","item","xs","sm","md","AddChannelDialog","setChannelId","setPassword","Box","m","ChannelMoreMenu","deleteRequest","drawer","flexShrink","drawerPaper","drawerContainer","overflow","HomeDrawer","channelDialogOpen","setChannelDialogOpen","Drawer","paper","List","ListSubheader","ListItemSecondaryAction","edge","channel","index","ListItem","button","handleClick","ListItemText","primary","callback","MoreVert","SceneCard","gutterBottom","cardGrid","paddingBottom","loading","left","transform","Home","useRequest","body","Items","update","prev","next","options","force","getScenes","isFinished","markerDialogOpen","setMarkerDialogOpen","CssBaseline","container","CircularProgress","MarkerSelection","isValidMarkerSrc","ImagePreview","parseSketchfabUrl","pieces","length","modelsBaseUrl","ModelPreview","blobs","setThumbnail","alertAlreadyUsed","setAlertAlreadyUsed","parseModelUrl","substring","modelId","metadataUrl","Authorization","mode","response","json","metadata","isDownloadable","thumbnails","images","undefined","thumbnailUrl","previewContainer","aspectRatio","overlayPreview","AddOverlayModal","srcValue","dialog","DialogTitle","FormControl","Select","newType","TransformController","props","modelSelection","overlay","initialPosition","initialRotation","initialScale","getInitialPosRotScale","orbitRef","transformRef","current","controls","setMode","enabled","storeTransform","translation","worldPosition","Euler","setFromQuaternion","worldQuaternion","worldScale","_x","_y","_z","TransformControls","ImageObject","initialParam","ratio","setRatio","texture","useTexture","naturalHeight","naturalWidth","fallback","attach","args","Fallback","GltfModel","gltf","useGLTF","object","getExtension","filename","toLowerCase","pop","getFileUrl","file","async","blob","createObjectURL","updateGltfLinks","blobUrls","gltfString","entryBlob","Blob","readGltfFromZipUrl","zipUrl","arrayBuffer","JSZip","loadAsync","result","files","values","filter","dir","entryFile","find","Promise","all","fileUrl","getDownloadUrl","SketchfabModel","blobUrl","setBlobUrl","isDownloading","downloadUrl","Overlay","selection","isSelected","Image","selectQueries","queries","selectEntities","persistConfig","storage","whitelist","rootReducer","combineReducers","accountReducer","settingsReducer","editorReducer","entitiesReducer","queriesReducer","homeReducer","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","concat","queryMiddleware","superagentInterface","persistor","persistStore","Scene","overlaySelection","markerSrc","camera","useRef","PerspectiveCamera","fwdRef","OrbitControls","viewport","flex","EditorViewport","iconTool","IconTool","toolName","icon","onClickCallback","Tooltip","borderRadius","borderTopRightRadius","borderTopLeftRadius","footer","SideSubMenu","Divider","selected","normal","OverlayMenuItem","nome","includes","disableElevation","OverlayMenu","Remove","String","SceneTextField","menu","SideMenu","SaveSceneButton","horizontal","toolbar","toolbarLeft","marginRight","toolbarCenter","toolbarRight","Editor","OpenWith","Cached","Height","RestrictedRoute","isLoggedIn","rest","render","LoginRoute","Routes","path","pathname","App","useMemo","createTheme","palette","ThemeProvider","hostname","match","ReactDOM","StrictMode","queriesSelector","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.08a19123.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction Logo() {\r\n  return (\r\n    <NavLink to=\"/home\" style={{ textDecoration: 'none', color: 'unset' }}>\r\n      <Typography variant=\"h6\"> EducAR </Typography>\r\n    </NavLink>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import { Container } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Logo from './Logo';\r\n\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-start',\r\n    padding: 0,\r\n    marginLeft: 0,\r\n  },\r\n  appBar: {\r\n    zIndex: 2,\r\n  },\r\n});\r\n\r\nfunction TopMenu({ children, hideLogo, position }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position={position} className={classes.appBar}>\r\n      <Toolbar variant=\"dense\">\r\n        {\r\n          (!hideLogo)\r\n            ? (\r\n              <Container className={classes.title}>\r\n                <Logo />\r\n              </Container>\r\n            ) : null\r\n        }\r\n        { children }\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\nTopMenu.defaultProps = {\r\n  hideLogo: false,\r\n  position: 'static',\r\n  children: [],\r\n};\r\nTopMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  hideLogo: PropTypes.bool,\r\n  position: PropTypes.string,\r\n};\r\n\r\nexport default TopMenu;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n// Slice\r\nconst settings = createSlice({\r\n  name: 'settings',\r\n  initialState: {\r\n    paletteType: prefersDarkMode ? 'dark' : 'light',\r\n  },\r\n  reducers: {\r\n    setPaletteType(state, action) {\r\n      state.paletteType = action.payload;\r\n    },\r\n    togglePaletteType(state) {\r\n      state.paletteType = state.paletteType === 'dark' ? 'light' : 'dark';\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nconst settingsActions = Object(settings.actions);\r\n\r\n// Selectors\r\nconst selectPaletteType = (state) => state.settings.paletteType;\r\n\r\nconst settingsSelectors = {\r\n  selectPaletteType,\r\n};\r\n\r\nexport { settingsActions, settingsSelectors };\r\nexport default settings.reducer;\r\n","import React from 'react';\r\nimport {\r\n  Brightness4,\r\n  Brightness7,\r\n} from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { useStore, useSelector } from 'react-redux';\r\n\r\nimport { settingsActions, settingsSelectors } from '../state/slices/settings';\r\n\r\nfunction renderIcon(paletteType) {\r\n  switch (paletteType) {\r\n    case 'light': return <Brightness4 />;\r\n    case 'dark': return <Brightness7 />;\r\n    default: return null;\r\n  }\r\n}\r\n\r\nfunction PaletteTypeButton() {\r\n  const paletteType = useSelector(settingsSelectors.selectPaletteType);\r\n  const store = useStore();\r\n\r\n  const clicked = () => store.dispatch(settingsActions.togglePaletteType());\r\n\r\n  return (\r\n    <IconButton onClick={clicked} aria-label=\"Toggle light/dark theme\">\r\n      { renderIcon(paletteType) }\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default PaletteTypeButton;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Slice\r\nconst account = createSlice({\r\n  name: 'account',\r\n  initialState: {\r\n    accessToken: null,\r\n  },\r\n  reducers: {\r\n    userLoggedIn(state, action) {\r\n      state.accessToken = action.payload;\r\n    },\r\n    userLoggedOff(state) {\r\n      state.accessToken = null;\r\n    },\r\n    setScenes(state, action) {\r\n      state.scenes = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nconst accountActions = Object(account.actions);\r\n\r\n// Selectors\r\n\r\nconst selectAccessToken = (state) => state.account.accessToken;\r\nconst selectChannelsMeta = (state) => state.entities.channels || [];\r\n\r\nconst accountSelectors = {\r\n  selectAccessToken,\r\n  selectChannelsMeta,\r\n};\r\n\r\n// Exports\r\nexport { accountActions, accountSelectors };\r\nexport default account.reducer;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n} from 'react';\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { useStore } from 'react-redux';\r\nimport { accountActions } from '../../state/slices/account';\r\n\r\nconst CLIENT_ID = 'Qj6hQl5K04dccP4SsGykPq4Pyp8kTYkny5gAqBBY';\r\nconst SKETCHFAB_URL = `https://sketchfab.com/oauth2/authorize/?response_type=token&client_id=${CLIENT_ID}&approval_prompt=auto`;\r\nconst BASE_URL = 'http://localhost:3000';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  submit: {\r\n    marginTop: theme.spacing(6),\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction getAccessToken() {\r\n  const url = new URL(window.location);\r\n  const hashParams = url.hash.split('&');\r\n  let token = null;\r\n  hashParams.forEach((param) => {\r\n    if (param.indexOf('access_token') !== -1) {\r\n      token = param.replace('#access_token=', '');\r\n    }\r\n  });\r\n  return token;\r\n}\r\n\r\nfunction getError() {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  return urlSearchParams.get('error') || null;\r\n}\r\n\r\nfunction SketchfabLoginButton() {\r\n  const classes = useStyles();\r\n  const [windowReference, setWindowReference] = useState(null);\r\n  const store = useStore();\r\n\r\n  useEffect(() => {\r\n    if (window.opener) {\r\n      const accessToken = getAccessToken();\r\n      const error = getError();\r\n      if (accessToken !== null) {\r\n        window.opener.postMessage({ accessToken, source: window.name });\r\n        window.close();\r\n      } else if (error !== null) {\r\n        window.close();\r\n      }\r\n    }\r\n  });\r\n\r\n  const receiveMessage = (event) => {\r\n    if (event.origin !== BASE_URL) {\r\n      return;\r\n    }\r\n    const { data } = event;\r\n    if (data.source === 'Sketchfab OAuth2 Login') {\r\n      window.removeEventListener('message', receiveMessage, false);\r\n      store.dispatch(accountActions.userLoggedIn(data.accessToken));\r\n    }\r\n  };\r\n\r\n  const openSketchfab = () => {\r\n    window.removeEventListener('message', receiveMessage, false);\r\n    const y = window.top.outerHeight / 2 + window.top.screenY - 275;\r\n    const x = window.top.outerWidth / 2 + window.top.screenX - 225;\r\n    if (windowReference === null || windowReference.closed) {\r\n      const ref = window.open(SKETCHFAB_URL, 'Sketchfab OAuth2 Login', `innerHeight=550,innerWidth=450,top=${y},left=${x}`);\r\n      setWindowReference(ref);\r\n    } else {\r\n      windowReference.focus();\r\n    }\r\n    window.addEventListener('message', receiveMessage, false);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      type=\"button\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={classes.submit}\r\n      onClick={openSketchfab}\r\n    >\r\n      Entrar com Sketchfab\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default SketchfabLoginButton;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport SketchfabLoginButton from './SketchfabLoginButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 350,\r\n    margin: '0 auto',\r\n    padding: '10px',\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(6),\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction LoginCard() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n    >\r\n      <CardContent>\r\n        <Typography className={classes.title} component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <SketchfabLoginButton />\r\n        </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LoginCard;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nimport TopMenu from '../../components/TopMenu';\r\nimport PaletteTypeButton from '../../components/PaletteTypeButton';\r\nimport LoginCard from './LoginCard';\r\n\r\nconst useStyles = makeStyles({\r\n  loginCard: {\r\n    marginTop: '100px',\r\n  },\r\n});\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <TopMenu>\r\n        <PaletteTypeButton />\r\n      </TopMenu>\r\n      <div className={classes.loginCard}>\r\n        <LoginCard />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import Login from './Login';\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NextPageButton({\r\n  children, redirectTo, onClick, disabled,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  function handleClick() {\r\n    onClick();\r\n    history.push(redirectTo);\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant=\"contained\"\r\n      onClick={handleClick}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\nNextPageButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  redirectTo: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\nNextPageButton.defaultProps = {\r\n  disabled: false,\r\n  onClick: () => {},\r\n};\r\n\r\nexport default NextPageButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  pageTitle: {\r\n    marginTop: theme.spacing(4),\r\n    marginBottom: theme.spacing(4),\r\n    padding: '0',\r\n  },\r\n}));\r\n\r\nfunction PageTitle({ title }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.pageTitle} maxWidth=\"md\">\r\n      <Typography variant=\"h5\" component=\"h1\">{title}</Typography>\r\n    </Container>\r\n  );\r\n}\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { AccountCircle } from '@material-ui/icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport { useStore } from 'react-redux';\r\n\r\nimport { accountActions } from '../state/slices/account';\r\n\r\nfunction ProfileDropdown() {\r\n  const store = useStore();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    store.dispatch(accountActions.userLoggedOff());\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleClick} aria-controls=\"simple-menu\" aria-haspopup=\"true\">\r\n        <AccountCircle />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Minha Conta</MenuItem>\r\n        <MenuItem onClick={handleLogout}>Sair</MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileDropdown;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\n// query config for retrieving current user's scenes\r\nconst getScenes = (accessToken) => ({\r\n  url: 'https://4wu9au10o7.execute-api.us-east-1.amazonaws.com/dev/channels/',\r\n  transform: (body) => ({ channels: body.Items }),\r\n  update: {\r\n    channels: (prev, next) => next,\r\n  },\r\n  options: {\r\n    headers: {\r\n      authorizationToken: accessToken,\r\n    },\r\n  },\r\n  force: true,\r\n});\r\n\r\nconst selectScenes = (state) => state.entities.scenes || {};\r\n\r\nconst selectSceneCards = createSelector(\r\n  selectScenes,\r\n  (scenes) => Object.keys().map((name, idx) => ({\r\n    thumbnail: scenes[name].trigger,\r\n    name,\r\n    id: idx,\r\n  })),\r\n);\r\n\r\nconst scenesSelectors = {\r\n  selectScenes,\r\n  selectSceneCards,\r\n};\r\n\r\nexport { getScenes, scenesSelectors };\r\n","/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-console */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Enums\r\nconst modesEnum = {\r\n  TRANSLATE: 'translate',\r\n  ROTATE: 'rotate',\r\n  SCALE: 'scale',\r\n};\r\nconst typeEnums = {\r\n  MODEL: 'model',\r\n  VIDEO: 'video',\r\n  IMAGE: 'image',\r\n};\r\n\r\nconst initialState = {\r\n  trigger: {\r\n    src: '',\r\n    isValid: false,\r\n  },\r\n  overlay_selection: [0],\r\n  controlMode: modesEnum.TRANSLATE,\r\n  overlays: [],\r\n  isNewScene: true,\r\n  name: '',\r\n  addOverlayModal: {\r\n    isAddingOverlay: false,\r\n    src: '',\r\n    type: typeEnums.IMAGE,\r\n    isValid: false,\r\n  },\r\n  blobFiles: {},\r\n};\r\n\r\n// Slice\r\nconst editor = createSlice({\r\n  name: 'editor',\r\n  initialState,\r\n  reducers: {\r\n    setMarkerSrc(state, action) {\r\n      state.trigger.src = action.payload;\r\n    },\r\n    setValidMarker(state) {\r\n      state.trigger.isValid = true;\r\n    },\r\n    setInvalidMarker(state) {\r\n      state.trigger.isValid = false;\r\n    },\r\n    setStateFromScene(state, action) {\r\n      const { name, scene } = action.payload;\r\n      return {\r\n        ...initialState,\r\n        overlays: scene.overlays,\r\n        trigger: {\r\n          src: scene.trigger,\r\n          isValid: true,\r\n        },\r\n        isNewScene: false,\r\n        name,\r\n      };\r\n    },\r\n    setOverlaySelection(state, action) {\r\n      state.overlay_selection = action.payload;\r\n    },\r\n    setControlMode(state, action) {\r\n      state.controlMode = action.payload;\r\n    },\r\n    setOverlayTransform(state, action) {\r\n      const { position, rotation, scale } = action.payload.posRotScale;\r\n      state.overlays[action.payload.id].position = position;\r\n      state.overlays[action.payload.id].rotation = rotation;\r\n      state.overlays[action.payload.id].scale = scale;\r\n    },\r\n    setIsAddingOverlay(state, action) {\r\n      state.addOverlayModal.isAddingOverlay = action.payload;\r\n    },\r\n    setAddOverlaySrc(state, action) {\r\n      state.addOverlayModal.src = action.payload;\r\n    },\r\n    setAddOverlayIsValid(state, action) {\r\n      state.addOverlayModal.isValid = action.payload;\r\n    },\r\n    setAddOverlayType(state, action) {\r\n      state.addOverlayModal.type = action.payload;\r\n      state.addOverlayModal.src = initialState.addOverlayModal.src;\r\n    },\r\n    addOverlay(state) {\r\n      state.overlays.push(\r\n        {\r\n          scale: {\r\n            x: 1,\r\n            y: 1,\r\n            z: 1,\r\n          },\r\n          position: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0,\r\n          },\r\n          type: state.addOverlayModal.type,\r\n          url: state.addOverlayModal.src,\r\n          rotation: {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0,\r\n          },\r\n        },\r\n      );\r\n      state.addOverlayModal = initialState.addOverlayModal;\r\n    },\r\n    removeOverlay(state) {\r\n      state.overlays.splice(state.overlay_selection[0], 1);\r\n      state.overlay_selection = [0];\r\n    },\r\n    setBlobFile(state, action) {\r\n      state.blobFiles[action.payload.key] = action.payload.value;\r\n    },\r\n    clearEditorState() {\r\n      return initialState;\r\n    },\r\n    setName(state, action) {\r\n      state.name = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nconst editorActions = Object(editor.actions);\r\n\r\n// Selectors\r\nconst selectMarkerSrc = (state) => state.editor.trigger.src;\r\n\r\nconst selectMarkerIsValid = (state) => state.editor.trigger.isValid;\r\n\r\nconst selectOverlays = (state) => state.editor.overlays;\r\n\r\nconst selectOverlaySelection = (state) => state.editor.overlay_selection;\r\n\r\nconst selectControlMode = (state) => state.editor.controlMode;\r\n\r\nconst selectScene = (state) => ({\r\n  sceneId: state.editor.name,\r\n  sceneInfo: {\r\n    trigger: state.editor.trigger.src,\r\n    overlays: state.editor.overlays,\r\n  },\r\n});\r\n\r\nconst selectIsAddingOverlay = (state) => state.editor.addOverlayModal.isAddingOverlay;\r\n\r\nconst selectIsValidAddOverlay = (state) => state.editor.addOverlayModal.isValid;\r\n\r\nconst selectAddOverlaySrc = (state) => state.editor.addOverlayModal.src;\r\n\r\nconst selectAddOverlayType = (state) => state.editor.addOverlayModal.type;\r\n\r\nconst selectBlobFiles = (state) => state.editor.blobFiles;\r\n\r\nconst selectSceneState = (state) => state.editor;\r\n\r\nconst editorSelectors = {\r\n  selectMarkerSrc,\r\n  selectMarkerIsValid,\r\n  selectOverlays,\r\n  selectOverlaySelection,\r\n  selectControlMode,\r\n  selectScene,\r\n  selectIsAddingOverlay,\r\n  selectIsValidAddOverlay,\r\n  selectAddOverlaySrc,\r\n  selectAddOverlayType,\r\n  selectBlobFiles,\r\n  selectSceneState,\r\n};\r\n\r\n// Exports\r\nexport { editorActions, editorSelectors };\r\nexport { modesEnum, typeEnums };\r\nexport default editor.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Slice\r\nconst home = createSlice({\r\n  name: 'home',\r\n  initialState: {\r\n    selectedChannelIndex: null,\r\n  },\r\n  reducers: {\r\n    setSelectedChannelIndex(state, action) {\r\n      state.selectedChannelIndex = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nconst homeActions = Object(home.actions);\r\n\r\n// Selectors\r\n\r\nconst selectSelectedChannelIndex = (state) => state.home.selectedChannelIndex;\r\nconst selectSelectedChannel = (state) => {\r\n  const channels = state.entities.channels || [];\r\n  return channels[state.home.selectedChannelIndex] || {};\r\n};\r\n\r\nconst homeSelectors = {\r\n  selectSelectedChannelIndex,\r\n  selectSelectedChannel,\r\n};\r\n\r\n// Exports\r\nexport { homeActions, homeSelectors };\r\nexport default home.reducer;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Snackbar,\r\n  Slide,\r\n} from '@material-ui/core';\r\n\r\nimport {\r\n  editorActions,\r\n  editorSelectors,\r\n} from '../../state/slices/editor';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  imgContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '440px',\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  img: {\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n}));\r\n\r\nfunction MarkerPreview() {\r\n  const [imgExists, setImgExists] = useState(false);\r\n  const [alertUndownloadable, setAlertUndownloadable] = useState(false);\r\n  const classes = useStyles();\r\n  const src = useSelector(editorSelectors.selectMarkerSrc);\r\n  const store = useStore();\r\n\r\n  async function checkIfDownloadable() {\r\n    try {\r\n      const response = await fetch(src);\r\n      if (response.ok) {\r\n        setAlertUndownloadable(false);\r\n        store.dispatch(editorActions.setValidMarker());\r\n      }\r\n    } catch (e) {\r\n      setAlertUndownloadable(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    store.dispatch(editorActions.setInvalidMarker());\r\n    setAlertUndownloadable(false);\r\n    setImgExists(false);\r\n  }, [src]);\r\n\r\n  useEffect(() => {\r\n    if (imgExists) {\r\n      checkIfDownloadable();\r\n    }\r\n  }, [imgExists]);\r\n\r\n  const handleValidImage = () => {\r\n    setImgExists(true);\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" className={classes.imgContainer} square>\r\n      <img\r\n        className={classes.img}\r\n        src={src}\r\n        alt=\"\"\r\n        onLoad={handleValidImage}\r\n      />\r\n      <Snackbar\r\n        autoHideDuration={null}\r\n        severity=\"error\"\r\n        open={alertUndownloadable}\r\n        TransitionComponent={Slide}\r\n        message=\"Não é possível utilizar esta imagem (possível erro de CORS).\"\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default MarkerPreview;\r\n","import { Container, TextField, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport { editorActions, editorSelectors } from '../../state/slices/editor';\r\nimport MarkerPreview from './MarkerPreview';\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    padding: '0',\r\n  },\r\n});\r\n\r\nfunction MarkerSelectionContainer() {\r\n  const store = useStore();\r\n  const classes = useStyles();\r\n\r\n  const markerSrcValue = useSelector(editorSelectors.selectMarkerSrc);\r\n\r\n  const handleChange = (v) => {\r\n    store.dispatch(editorActions.setMarkerSrc(v));\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.content}>\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"markerSrc\"\r\n        label=\"Link da imagem\"\r\n        name=\"markerSrc\"\r\n        autoFocus\r\n        onChange={(e) => handleChange(e.target.value)}\r\n        value={markerSrcValue}\r\n      />\r\n      <MarkerPreview />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MarkerSelectionContainer;\r\n","import {\n  Button, Dialog, DialogActions, DialogContent, makeStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { editorActions } from '../../state/slices/editor';\nimport MarkerSelectionContainer from '../marker/MarkerSelectionContainer';\n\nconst useStyles = makeStyles({\n  window: {\n    minWidth: '600px',\n  },\n});\n\nfunction AddMarkerDialog({ open, handleClose }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n    >\n      <DialogContent\n        className={classes.window}\n      >\n        <MarkerSelectionContainer />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Salvar</Button>\n        <Button onClick={() => {\n          handleClose();\n          dispatch(editorActions.setMarkerSrc(''));\n        }}\n        >\n          Fechar\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nAddMarkerDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default AddMarkerDialog;\n","const BASE_URL = 'https://4wu9au10o7.execute-api.us-east-1.amazonaws.com/dev/';\r\n\r\n/**\r\n * Atualiza ou Cria o conteúdo da cena em um canal.\r\n * @param accessToken - Token de acesso do usuário.\r\n * @param channelId - Id do canal do professor.\r\n * @param sceneId - Id da cena.\r\n * @param scene - Objeto cena, contendo trigger e array de overlays.\r\n */\r\nconst updateScene = ({\r\n  accessToken,\r\n  channelId,\r\n  sceneId,\r\n  scene,\r\n}) => ({\r\n  method: 'put',\r\n  url: `/channels/${channelId}/scenes/${sceneId}`,\r\n  baseURL: BASE_URL,\r\n  data: {\r\n    scene,\r\n  },\r\n  headers: {\r\n    authorizationToken: accessToken,\r\n  },\r\n});\r\n\r\n/**\r\n * Cria um canal.\r\n * @param accessToken - Token de acesso do usuário.\r\n * @param channelId - Id do canal do professor.\r\n * @param password - Senha do canal. (Opcional)\r\n */\r\nconst createChannel = ({\r\n  accessToken,\r\n  channelId,\r\n  password,\r\n}) => ({\r\n  method: 'post',\r\n  url: '/channels',\r\n  baseURL: BASE_URL,\r\n  data: {\r\n    id: channelId,\r\n    ...(password && { password }),\r\n    scenes: {},\r\n  },\r\n  headers: {\r\n    authorizationToken: accessToken,\r\n  },\r\n});\r\n\r\nconst deleteChannel = ({\r\n  accessToken,\r\n  channelId,\r\n}) => ({\r\n  method: 'delete',\r\n  url: `/channels/${channelId}`,\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    authorizationToken: accessToken,\r\n  },\r\n});\r\n\r\nconst channelRequests = {\r\n  updateScene,\r\n  createChannel,\r\n  deleteChannel,\r\n};\r\n\r\nexport default channelRequests;\r\n","/* eslint-disable react/prop-types */\n/* eslint-disable no-unused-vars */\nimport {\n  Button,\n  ButtonBase,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Grid, TextField, Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Add } from '@material-ui/icons';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport channelRequests from '../../state/requests/channel';\nimport { accountSelectors } from '../../state/slices/account';\nimport { editorActions, editorSelectors } from '../../state/slices/editor';\nimport { homeActions, homeSelectors } from '../../state/slices/home';\n\nconst useStyles = makeStyles({\n  cardDesign: {\n    backgroundColor: 'rgba(255, 0, 0, 0)',\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    display: 'flex',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  editingCardContent: {\n    flexGrow: 1,\n  },\n  buttonBase: {\n    display: 'block',\n    flexGrow: 1,\n  },\n});\n\nfunction validateSceneInsertion(sceneId, trigger) {\n  return sceneId && trigger;\n}\n\nfunction EditingCard({ setState, handleOpenMarker }) {\n  const classes = useStyles();\n  const markerSrcValue = useSelector(editorSelectors.selectMarkerSrc);\n  const accessToken = useSelector(accountSelectors.selectAccessToken);\n  const channels = useSelector(accountSelectors.selectChannelsMeta);\n  const channelIndex = useSelector(homeSelectors.selectSelectedChannelIndex);\n  const selectedChannel = channels[channelIndex];\n  const dispatch = useDispatch();\n  const [sceneName, setSceneName] = useState('');\n\n  const handleSaveScene = () => {\n    if (!validateSceneInsertion(sceneName, markerSrcValue)) return;\n\n    const request = channelRequests.updateScene({\n      accessToken,\n      channelId: selectedChannel.id,\n      sceneId: sceneName,\n      scene: {\n        trigger: markerSrcValue,\n        overlays: [],\n      },\n    });\n\n    axios(request)\n      .then()\n      .catch();\n\n    setState('blank');\n  };\n\n  return (\n    <Card\n      className={classes.card}\n    >\n      <ButtonBase\n        className={classes.buttonBase}\n        onClick={handleOpenMarker}\n      >\n        {\n          (markerSrcValue)\n            ? (\n              <CardMedia\n                className={classes.cardMedia}\n                image={markerSrcValue || ''}\n                title=\"marker\"\n              />\n            )\n            : (\n              <CardMedia>\n                <Typography>\n                  *Clique aqui para escolher uma imagem*\n                </Typography>\n              </CardMedia>\n            )\n        }\n      </ButtonBase>\n      <CardContent className={classes.editingCardContent}>\n        <TextField\n          value={sceneName}\n          placeholder=\"Nome da cena\"\n          onChange={(e) => setSceneName(e.target.value)}\n        />\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" onClick={handleSaveScene}>\n          Salvar\n        </Button>\n        <Button size=\"small\" onClick={() => setState('blank')}>\n          Fechar\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nfunction BlankCard({ setState }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleEditNewScene = () => {\n    dispatch(editorActions.setMarkerSrc(''));\n    setState('editing');\n  };\n\n  return (\n    <Card\n      className={classes.card}\n      classes={{ root: classes.cardDesign }}\n    >\n      <ButtonBase\n        className={classes.buttonBase}\n        onClick={handleEditNewScene}\n      >\n        <CardContent className={classes.cardContent}>\n          Nova Cena\n          <Add />\n        </CardContent>\n      </ButtonBase>\n    </Card>\n  );\n}\n\nfunction AddSceneCard({ handleOpenMarker }) {\n  const classes = useStyles();\n  const [state, setState] = useState('blank');\n\n  const CardSelector = ({ type }) => {\n    switch (type) {\n      case 'blank':\n        return <BlankCard setState={setState} />;\n      case 'editing':\n        return <EditingCard setState={setState} handleOpenMarker={handleOpenMarker} />;\n      default:\n        return <div />;\n    }\n  };\n\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <CardSelector type={state} />\n    </Grid>\n  );\n}\n\nexport default AddSceneCard;\n","/* eslint-disable no-unused-vars */\nimport {\n  Box, Button, Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport channelRequests from '../../state/requests/channel';\nimport { accountSelectors } from '../../state/slices/account';\n\nfunction AddChannelDialog({ open, handleClose }) {\n  const [channelId, setChannelId] = useState('');\n  const [password, setPassword] = useState('');\n  const accessToken = useSelector(accountSelectors.selectAccessToken);\n  const request = channelRequests.createChannel({\n    accessToken,\n    channelId,\n    password,\n  });\n\n  const handleSave = () => {\n    if (channelId === '') return;\n    handleClose();\n    axios(request)\n      .then(() => {})\n      .catch(() => {});\n  };\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogContent style={{ display: 'flex' }}>\n        <Container>\n          <Typography variant=\"h6\">Adicionar Canal</Typography>\n          <Box m={2}>\n            <TextField\n              placeholder=\"Nome do Canal\"\n              id=\"channelId\"\n              name=\"channelId\"\n              required\n              value={channelId}\n              onChange={(e) => setChannelId(e.target.value)}\n            />\n          </Box>\n          <Box m={2}>\n            <TextField\n              placeholder=\"Senha do Canal\"\n              id=\"channelPassword\"\n              name=\"channelPassword\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Box>\n        </Container>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleSave}>Salvar</Button>\n        <Button onClick={handleClose}>Fechar</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\nAddChannelDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default AddChannelDialog;\n","/* eslint-disable no-unused-vars */\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport channelRequests from '../../state/requests/channel';\r\nimport { accountSelectors } from '../../state/slices/account';\r\n\r\nfunction ChannelMoreMenu({ channelId, anchorEl, handleClose }) {\r\n  const accessToken = useSelector(accountSelectors.selectAccessToken);\r\n  const deleteRequest = channelRequests.deleteChannel({\r\n    accessToken,\r\n    channelId,\r\n  });\r\n\r\n  return (\r\n    <Menu\r\n      id=\"simple-menu\"\r\n      anchorEl={anchorEl}\r\n      keepMounted\r\n      open={Boolean(anchorEl)}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem onClick={() => {\r\n        axios(deleteRequest)\r\n          .then()\r\n          .catch();\r\n        handleClose();\r\n      }}\r\n      >\r\n        Deletar\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n}\r\nChannelMoreMenu.defaultProps = {\r\n  anchorEl: null,\r\n};\r\nChannelMoreMenu.propTypes = {\r\n  channelId: PropTypes.string.isRequired,\r\n  anchorEl: PropTypes.node,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChannelMoreMenu;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/forbid-prop-types */\r\nimport {\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem, ListItemSecondaryAction,\r\n  ListItemText,\r\n  ListSubheader,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { Add, MoreVert } from '@material-ui/icons';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport TopMenu from '../../components/TopMenu';\r\nimport { homeActions } from '../../state/slices/home';\r\nimport AddChannelDialog from './AddChannelDialog';\r\nimport ChannelMoreMenu from './ChannelMoreMenu';\r\n\r\nconst drawerWidth = 248;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: 2,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerContainer: {\r\n    marginTop: 48,\r\n    overflow: 'auto',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction HomeDrawer({ channels, children }) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handleClick = (index) => dispatch(homeActions.setSelectedChannelIndex(index));\r\n\r\n  const [channelDialogOpen, setChannelDialogOpen] = useState(false);\r\n  const handleOpenAddChannel = () => setChannelDialogOpen(true);\r\n  const handleCloseAddChannel = () => setChannelDialogOpen(false);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [channelId, setChannelId] = useState(0);\r\n\r\n  const handleOpenMenu = (event, callback) => {\r\n    setAnchorEl(event.currentTarget);\r\n    callback();\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const renderItem = (channel, index) => (\r\n    <ListItem key={channel.id} button onClick={() => handleClick(index)}>\r\n      <ListItemText primary={channel.id} />\r\n      <ListItemSecondaryAction>\r\n        <IconButton onClick={(e) => handleOpenMenu(e, () => setChannelId(channel.id))}>\r\n          <MoreVert />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n  );\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      className={classes.drawer}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <TopMenu position=\"fixed\">\r\n        {children}\r\n      </TopMenu>\r\n      <div className={classes.drawerContainer}>\r\n        <List>\r\n          <ListSubheader>\r\n            Meus Canais\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" onClick={handleOpenAddChannel}>\r\n                <Add />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListSubheader>\r\n          { channels.map(renderItem) }\r\n        </List>\r\n      </div>\r\n      <AddChannelDialog\r\n        open={channelDialogOpen}\r\n        handleClose={handleCloseAddChannel}\r\n      />\r\n      <ChannelMoreMenu\r\n        channelId={channelId}\r\n        anchorEl={anchorEl}\r\n        handleClose={handleCloseMenu}\r\n      />\r\n    </Drawer>\r\n  );\r\n}\r\nHomeDrawer.propTypes = {\r\n  channels: PropTypes.any.isRequired,\r\n  children: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default HomeDrawer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useStore } from 'react-redux';\r\nimport { editorActions } from '../../state/slices/editor';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction SceneCard({ name, scene, id }) {\r\n  const classes = useStyles();\r\n  const store = useStore();\r\n  const history = useHistory();\r\n\r\n  const editOnClick = () => {\r\n    store.dispatch(editorActions.setStateFromScene({ name, scene }));\r\n    history.push('/editor');\r\n  };\r\n\r\n  return (\r\n    <Grid item key={id} xs={12} sm={6} md={4}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image={scene.trigger}\r\n          title=\"Thumbnail\"\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\" onClick={editOnClick}>\r\n            Editar\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\nSceneCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  scene: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    trigger: PropTypes.string,\r\n    overlays: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default SceneCard;\r\n","/* eslint-disable no-unused-vars */\r\nimport {\r\n  CircularProgress,\r\n  Container,\r\n  CssBaseline,\r\n  Grid,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRequest } from 'redux-query-react';\r\nimport NextPageButton from '../../components/NextPageButton';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport PaletteTypeButton from '../../components/PaletteTypeButton';\r\nimport ProfileDropdown from '../../components/ProfileDropdown';\r\nimport TopMenu from '../../components/TopMenu';\r\nimport { getScenes, scenesSelectors } from '../../state/queries/scenes';\r\nimport { accountSelectors } from '../../state/slices/account';\r\nimport { editorActions } from '../../state/slices/editor';\r\nimport { homeActions, homeSelectors } from '../../state/slices/home';\r\nimport AddMarkerDialog from './AddMarkerDialog';\r\nimport AddSceneCard from './AddSceneCard';\r\nimport HomeDrawer from './HomeDrawer';\r\nimport SceneCard from './SceneCard';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  cardGrid: {\r\n    padding: 0,\r\n    paddingBottom: theme.spacing(6),\r\n  },\r\n  loading: {\r\n    position: 'fixed',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const accessToken = useSelector(accountSelectors.selectAccessToken);\r\n  const scenes = useSelector(scenesSelectors.selectScenes);\r\n\r\n  const channels = useSelector(accountSelectors.selectChannelsMeta);\r\n  const channelIndex = useSelector(homeSelectors.selectSelectedChannelIndex);\r\n  const selectedChannel = channels[channelIndex];\r\n\r\n  const dispatch = useDispatch();\r\n  const [{ isFinished }] = useRequest(\r\n    getScenes(accessToken),\r\n  );\r\n\r\n  // Redireciona para o primeiro canal da lista, assim que\r\n  // o download estiver pronto.\r\n  useEffect(() => {\r\n    if (isFinished) {\r\n      dispatch(homeActions.setSelectedChannelIndex(0));\r\n    }\r\n  }, [isFinished]);\r\n\r\n  const [markerDialogOpen, setMarkerDialogOpen] = useState(false);\r\n  const handleOpenAddMarker = () => setMarkerDialogOpen(true);\r\n  const handleCloseAddMarker = () => setMarkerDialogOpen(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <TopMenu position=\"fixed\" />\r\n      <HomeDrawer channels={channels}>\r\n        <PaletteTypeButton />\r\n        <ProfileDropdown />\r\n      </HomeDrawer>\r\n      <div className={classes.content}>\r\n        <PageTitle title=\"Cenas\" />\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          <Grid container spacing={4}>\r\n            <AddSceneCard handleOpenMarker={handleOpenAddMarker} />\r\n            {!selectedChannel ? <div className={classes.loading}><CircularProgress /></div>\r\n              : Object.keys(selectedChannel.scenes).map((key, idx) => (\r\n                <SceneCard key={key} name={key} scene={selectedChannel.scenes[key]} id={idx} />\r\n              ))}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n      <AddMarkerDialog open={markerDialogOpen} handleClose={handleCloseAddMarker} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Home from './Home';\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport NextPageButton from '../../components/NextPageButton';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport PaletteTypeButton from '../../components/PaletteTypeButton';\r\nimport ProfileDropdown from '../../components/ProfileDropdown';\r\nimport TopMenu from '../../components/TopMenu';\r\nimport { editorSelectors } from '../../state/slices/editor';\r\nimport MarkerSelectionContainer from './MarkerSelectionContainer';\r\n\r\nfunction MarkerSelection() {\r\n  const isValidMarkerSrc = useSelector(editorSelectors.selectMarkerIsValid);\r\n\r\n  return (\r\n    <>\r\n      <TopMenu>\r\n        <PaletteTypeButton />\r\n        <ProfileDropdown />\r\n        <NextPageButton redirectTo=\"/editor\" disabled={!isValidMarkerSrc}>Prosseguir</NextPageButton>\r\n      </TopMenu>\r\n      <PageTitle title=\"Selecionar Marcador\" />\r\n      <MarkerSelectionContainer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MarkerSelection;\r\n","import MarkerSelection from './MarkerSelection';\r\n\r\nexport default MarkerSelection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  makeStyles,\r\n  Snackbar,\r\n  Slide,\r\n} from '@material-ui/core';\r\nimport {\r\n  useSelector,\r\n  useStore,\r\n} from 'react-redux';\r\n\r\nimport { editorActions, editorSelectors } from '../../../state/slices/editor';\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\nexport default function ImagePreview() {\r\n  const [imgExists, setImgExists] = useState(false);\r\n  const [alertUndownloadable, setAlertUndownloadable] = useState(false);\r\n  const classes = useStyles();\r\n  const src = useSelector(editorSelectors.selectAddOverlaySrc);\r\n  const store = useStore();\r\n\r\n  async function checkIfDownloadable() {\r\n    try {\r\n      const response = await fetch(src);\r\n      if (response.ok) {\r\n        setAlertUndownloadable(false);\r\n        store.dispatch(editorActions.setAddOverlayIsValid(true));\r\n      }\r\n    } catch (e) {\r\n      setAlertUndownloadable(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    store.dispatch(editorActions.setAddOverlayIsValid(false));\r\n    setAlertUndownloadable(false);\r\n    setImgExists(false);\r\n  }, [src]);\r\n\r\n  useEffect(() => {\r\n    if (imgExists) {\r\n      checkIfDownloadable();\r\n    }\r\n  }, [imgExists]);\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className={classes.img}\r\n        src={src}\r\n        alt=\"\"\r\n        onLoad={() => setImgExists(true)}\r\n      />\r\n      <Snackbar\r\n        autoHideDuration={null}\r\n        severity=\"error\"\r\n        open={alertUndownloadable}\r\n        TransitionComponent={Slide}\r\n        message=\"Não é possível utilizar esta imagem (possível erro de CORS).\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","export default function parseSketchfabUrl(url) {\r\n  const pieces = url.split('-');\r\n  return pieces[pieces.length - 1];\r\n}\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport {\r\n  makeStyles,\r\n  Snackbar,\r\n  Slide,\r\n} from '@material-ui/core';\r\nimport {\r\n  useSelector,\r\n  useStore,\r\n} from 'react-redux';\r\n\r\nimport { editorActions, editorSelectors } from '../../../state/slices/editor';\r\nimport { accountSelectors } from '../../../state/slices/account';\r\nimport parseSketchfabUrl from '../../../utils';\r\n\r\nconst useStyles = makeStyles({\r\n  img: {\r\n    maxWidth: '100%',\r\n    maxHeight: '100%',\r\n  },\r\n});\r\n\r\nconst modelsBaseUrl = 'https://sketchfab.com/3d-models/';\r\n\r\nexport default function ModelPreview() {\r\n  const classes = useStyles();\r\n  const src = useSelector(editorSelectors.selectAddOverlaySrc);\r\n  const store = useStore();\r\n  const token = useSelector(accountSelectors.selectAccessToken);\r\n  const blobs = useSelector(editorSelectors.selectBlobFiles);\r\n  const [thumbnail, setThumbnail] = useState('');\r\n  const [alertAlreadyUsed, setAlertAlreadyUsed] = useState(false);\r\n\r\n  async function parseModelUrl(url) {\r\n    if (url) {\r\n      const baseUrl = url.substring(0, 32);\r\n      if (baseUrl === modelsBaseUrl) {\r\n        const modelId = parseSketchfabUrl(url);\r\n        const metadataUrl = `https://api.sketchfab.com/v3/models/${modelId}`;\r\n        const options = {\r\n          method: 'GET',\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          mode: 'cors',\r\n        };\r\n        const response = await fetch(metadataUrl, options);\r\n        if (response.ok) {\r\n          const metadata = await response.json();\r\n          if (metadata.isDownloadable) {\r\n            return metadata.thumbnails.images[0].url;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  useEffect(async () => {\r\n    store.dispatch(editorActions.setAddOverlayIsValid(false));\r\n    setAlertAlreadyUsed(false);\r\n    setThumbnail('');\r\n    const thumbnailUrl = await parseModelUrl(src);\r\n    if (thumbnailUrl) {\r\n      setThumbnail(thumbnailUrl);\r\n      if (blobs[src]) {\r\n        setAlertAlreadyUsed(true);\r\n      } else {\r\n        store.dispatch(editorActions.setAddOverlayIsValid(true));\r\n      }\r\n    }\r\n  }, [src]);\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className={classes.img}\r\n        src={thumbnail}\r\n        alt=\"\"\r\n      />\r\n      <Snackbar\r\n        autoHideDuration={null}\r\n        severity=\"error\"\r\n        TransitionComponent={Slide}\r\n        open={alertAlreadyUsed}\r\n        message=\"Modelo já adicionado.\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n} from '@material-ui/core';\r\nimport { useSelector, useStore } from 'react-redux';\r\n\r\nimport { editorActions, editorSelectors, typeEnums } from '../../../state/slices/editor';\r\nimport ImagePreview from './ImagePreview';\r\nimport ModelPreview from './ModelPreview';\r\nimport parseSketchfabUrl from '../../../utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    width: '100%',\r\n  },\r\n  previewContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    aspectRatio: '2 / 1',\r\n    minWidth: '380px',\r\n    width: 'calc(100vw - 480px)',\r\n    maxWidth: '880px',\r\n    marginTop: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nconst overlayPreview = (type) => {\r\n  switch (type) {\r\n    case typeEnums.IMAGE:\r\n      return <ImagePreview />;\r\n    case typeEnums.MODEL:\r\n      return <ModelPreview />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default function AddOverlayModal() {\r\n  const classes = useStyles();\r\n  const open = useSelector(editorSelectors.selectIsAddingOverlay);\r\n  const store = useStore();\r\n  const srcValue = useSelector(editorSelectors.selectAddOverlaySrc);\r\n  const isValid = useSelector(editorSelectors.selectIsValidAddOverlay);\r\n  const type = useSelector(editorSelectors.selectAddOverlayType);\r\n\r\n  const handleClose = () => store.dispatch(editorActions.setIsAddingOverlay(false));\r\n\r\n  const handleSrcChange = (src) => store.dispatch(editorActions.setAddOverlaySrc(src));\r\n\r\n  const handleTypeChange = (newType) => store.dispatch(editorActions.setAddOverlayType(newType));\r\n\r\n  const handleAddOverlay = () => {\r\n    if (type === typeEnums.MODEL) {\r\n      store.dispatch(editorActions.setAddOverlaySrc(parseSketchfabUrl(srcValue)));\r\n    }\r\n\r\n    store.dispatch(editorActions.addOverlay());\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" maxWidth=\"xl\" className={classes.dialog}>\r\n      <DialogTitle id=\"form-dialog-title\">Adicionar Overlay</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl variant=\"outlined\" className={classes.form}>\r\n          <Select\r\n            id=\"markerType\"\r\n            value={type}\r\n            onChange={(e) => handleTypeChange(e.target.value)}\r\n          >\r\n            <MenuItem value={typeEnums.IMAGE}>Imagem</MenuItem>\r\n            <MenuItem value={typeEnums.MODEL}>Modelo 3D</MenuItem>\r\n          </Select>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"markerSrc\"\r\n            label=\"Link do Overlay\"\r\n            name=\"markerSrc\"\r\n            autoFocus\r\n            value={srcValue}\r\n            onChange={(e) => handleSrcChange(e.target.value)}\r\n          />\r\n        </FormControl>\r\n        <Paper variant=\"outlined\" className={classes.previewContainer} square>\r\n          {overlayPreview(type)}\r\n        </Paper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancelar\r\n        </Button>\r\n        <Button onClick={handleAddOverlay} variant=\"contained\" color=\"primary\" disabled={!isValid}>\r\n          Adicionar\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-console */\r\n/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-return-assign */\r\nimport React, { useEffect } from 'react';\r\nimport { TransformControls } from '@react-three/drei';\r\nimport PropTypes from 'prop-types';\r\nimport { Euler } from 'three';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport { editorActions, editorSelectors } from '../../../state/slices/editor';\r\n\r\nfunction getInitialPosRotScale({ position, rotation, scale }) {\r\n  return {\r\n    initialPosition: [position.x, position.y, position.z],\r\n    initialRotation: [rotation.x, rotation.y, rotation.z],\r\n    initialScale: [scale.x, scale.y, scale.z],\r\n  };\r\n}\r\n\r\nconst TransformController = (props) => {\r\n  const modelSelection = useSelector(editorSelectors.selectOverlaySelection);\r\n  const overlays = useSelector(editorSelectors.selectOverlays);\r\n  const overlay = overlays[modelSelection[0]];\r\n  const store = useStore();\r\n\r\n  const {\r\n    initialPosition,\r\n    initialRotation,\r\n    initialScale,\r\n  } = getInitialPosRotScale(overlay);\r\n\r\n  const {\r\n    orbitRef, controlMode, children, transformRef,\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (transformRef.current && orbitRef.current) {\r\n      const controls = transformRef.current;\r\n\r\n      controls.setMode(controlMode);\r\n\r\n      // Desabilita o controle de câmera orbital durante\r\n      // utilização do controle de transform.\r\n      const callback = (event) => { orbitRef.current.enabled = !event.value; };\r\n\r\n      // Guarda os parâmetros globais do objeto na Store.\r\n      const storeTransform = (event) => {\r\n        const translation = controls.worldPosition;\r\n        const rotation = new Euler().setFromQuaternion(controls.worldQuaternion);\r\n        const scale = controls.worldScale;\r\n        const posRotScale = {\r\n          id: modelSelection[0],\r\n          posRotScale: {\r\n            position: { ...translation },\r\n            rotation: { x: rotation._x, y: rotation._y, z: rotation._z },\r\n            scale: { ...scale },\r\n          },\r\n        };\r\n        store.dispatch(editorActions.setOverlayTransform(posRotScale));\r\n      };\r\n\r\n      controls.addEventListener('dragging-changed', callback);\r\n      controls.addEventListener('mouseUp', storeTransform);\r\n      return () => {\r\n        controls.removeEventListener('dragging-changed', callback);\r\n        controls.removeEventListener('mouseUp', storeTransform);\r\n      };\r\n    }\r\n  });\r\n\r\n  return (\r\n    <TransformControls\r\n      ref={transformRef}\r\n      position={initialPosition}\r\n      rotation={initialRotation}\r\n      scale={initialScale}\r\n    >\r\n      {children}\r\n    </TransformControls>\r\n  );\r\n};\r\nTransformController.propTypes = {\r\n  orbitRef: PropTypes.any.isRequired,\r\n  controlMode: PropTypes.string.isRequired,\r\n  transformRef: PropTypes.any.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default TransformController;\r\n","/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable no-console */\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTexture } from '@react-three/drei';\r\n\r\nconst ImageObject = (props) => {\r\n  const { url, initialParam } = props;\r\n  const [ratio, setRatio] = useState(undefined);\r\n  const {\r\n    initialPosition,\r\n    initialRotation,\r\n    initialScale,\r\n  } = initialParam;\r\n  const texture = useTexture(url);\r\n\r\n  useEffect(() => {\r\n    setRatio(texture.image.naturalHeight / texture.image.naturalWidth);\r\n  }, [texture]);\r\n\r\n  return (!url || !texture || !ratio) ? null : (\r\n    <Suspense fallback={null}>\r\n      <mesh\r\n        position={initialPosition}\r\n        rotation={initialRotation}\r\n        scale={initialScale}\r\n      >\r\n        <boxBufferGeometry attach=\"geometry\" args={[1, ratio, 0]} />\r\n        <meshBasicMaterial attach=\"material\" map={texture} />\r\n      </mesh>\r\n    </Suspense>\r\n  );\r\n};\r\nImageObject.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  initialParam: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default ImageObject;\r\n","/* eslint-disable react/forbid-prop-types */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-console */\r\nimport React, {\r\n  Suspense,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Sphere, useGLTF } from '@react-three/drei';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport JSZip from 'jszip';\r\n\r\nimport { accountSelectors } from '../../../state/slices/account';\r\nimport { editorActions, editorSelectors } from '../../../state/slices/editor';\r\n\r\n// Esfera rosa representando que o modelo está carregando.\r\nconst Fallback = () => (\r\n  <Sphere>\r\n    <meshBasicMaterial attach=\"material\" color=\"hotpink\" />\r\n  </Sphere>\r\n);\r\n\r\n// Modelo 3D\r\nconst GltfModel = (props) => {\r\n  const { url, initialParam } = props;\r\n  const {\r\n    initialPosition,\r\n    initialRotation,\r\n    initialScale,\r\n  } = initialParam;\r\n  const gltf = useGLTF(url);\r\n\r\n  // Enquanto o modelo carrega, exibir modelo de Fallback\r\n  return (gltf)\r\n    ? (\r\n      <Suspense fallback={<div />}>\r\n        <primitive\r\n          position={initialPosition}\r\n          rotation={initialRotation}\r\n          scale={initialScale}\r\n          name=\"3dmodel\"\r\n          object={gltf.scene}\r\n        />\r\n      </Suspense>\r\n    )\r\n    : <Fallback />;\r\n};\r\nGltfModel.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  initialParam: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction getExtension(filename) {\r\n  return filename.toLowerCase().split('.').pop();\r\n}\r\n\r\nasync function getFileUrl(file) {\r\n  const blob = await file.async('blob');\r\n  const url = URL.createObjectURL(blob);\r\n  return url;\r\n}\r\n\r\nasync function updateGltfLinks(file, blobUrls) {\r\n  let gltfString = await file.async('string');\r\n  Object.keys(blobUrls).forEach((url) => {\r\n    gltfString = gltfString.replace(url, blobUrls[url]);\r\n  });\r\n  const entryBlob = new Blob([gltfString]);\r\n  return URL.createObjectURL(entryBlob);\r\n}\r\n\r\nasync function readGltfFromZipUrl(zipUrl) {\r\n  const response = await fetch(zipUrl);\r\n  const arrayBuffer = await response.arrayBuffer();\r\n\r\n  const result = await JSZip.loadAsync(arrayBuffer);\r\n\r\n  const files = Object.values(result.files).filter((item) => !item.dir);\r\n  const entryFile = files.find((file) => getExtension(file.name) === 'gltf');\r\n  files.splice(files.indexOf(entryFile), 1);\r\n  const blobUrls = {};\r\n\r\n  await Promise.all(files.map(async (file) => {\r\n    blobUrls[file.name] = await getFileUrl(file);\r\n  }));\r\n\r\n  const fileUrl = await updateGltfLinks(entryFile, blobUrls);\r\n  return fileUrl;\r\n}\r\n\r\nasync function getDownloadUrl(modelId, token) {\r\n  const metadataUrl = `https://api.sketchfab.com/v3/models/${modelId}/download`;\r\n  const options = {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    mode: 'cors',\r\n  };\r\n  const response = await fetch(metadataUrl, options);\r\n  const metadata = await response.json();\r\n  return metadata.gltf.url;\r\n}\r\n\r\nconst SketchfabModel = (props) => {\r\n  const { modelId, initialParam } = props;\r\n  const [blobUrl, setBlobUrl] = useState('');\r\n  const token = useSelector(accountSelectors.selectAccessToken);\r\n  const blobFiles = useSelector(editorSelectors.selectBlobFiles);\r\n  const store = useStore();\r\n\r\n  useEffect(async () => {\r\n    if (!blobFiles[modelId]) {\r\n      store.dispatch(editorActions.setBlobFile({ key: modelId, value: { isDownloading: true } }));\r\n      const downloadUrl = await getDownloadUrl(modelId, token);\r\n      const fileUrl = await readGltfFromZipUrl(downloadUrl);\r\n      store.dispatch(editorActions.setBlobFile(\r\n        { key: modelId, value: { isDownloading: false, fileUrl } },\r\n      ));\r\n      setBlobUrl(fileUrl);\r\n    } else if (!blobFiles[modelId].isDownloading) {\r\n      setBlobUrl(blobFiles[modelId].fileUrl);\r\n    }\r\n  }, [modelId, blobFiles[modelId]]);\r\n\r\n  return (blobUrl)\r\n    ? (\r\n      <GltfModel\r\n        url={blobUrl}\r\n        initialParam={initialParam}\r\n      />\r\n    )\r\n    : <Fallback />;\r\n};\r\nSketchfabModel.propTypes = {\r\n  modelId: PropTypes.string.isRequired,\r\n  initialParam: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default SketchfabModel;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable react/forbid-prop-types */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { editorSelectors, typeEnums } from '../../../state/slices/editor';\r\nimport ImageObject from './Image';\r\nimport SketchfabModel from './Model';\r\n\r\nfunction getInitialPosRotScale(isSelected, { position, rotation, scale }) {\r\n  if (isSelected) {\r\n    return {\r\n      initialPosition: [0, 0, 0],\r\n      initialRotation: [0, 0, 0],\r\n      initialScale: [1, 1, 1],\r\n    };\r\n  }\r\n  return {\r\n    initialPosition: [position.x, position.y, position.z],\r\n    initialRotation: [rotation.x, rotation.y, rotation.z],\r\n    initialScale: [scale.x, scale.y, scale.z],\r\n  };\r\n}\r\n\r\nconst Overlay = (props) => {\r\n  const {\r\n    id,\r\n    type,\r\n    url,\r\n  } = props;\r\n\r\n  const selection = useSelector(editorSelectors.selectOverlaySelection);\r\n  const overlay = useSelector(editorSelectors.selectOverlays)[id];\r\n  const isSelected = selection[0] === id;\r\n\r\n  /*\r\n    Quando o overlay está selecionado, os parâmetros iniciais do modelo devem ser [0,0,0],\r\n    pois recebem offset vindo do objeto pai TransformController.\r\n\r\n    Quando o overlay não está selecionado, seus parâmetros iniciais devem ser iguais aos\r\n    da última modificação na transformada, os quais estão armazenados na Store.\r\n  */\r\n  const initialParam = getInitialPosRotScale(isSelected, overlay);\r\n\r\n  switch (type) {\r\n    case typeEnums.IMAGE:\r\n      return (\r\n        <ImageObject\r\n          initialParam={initialParam}\r\n          url={url}\r\n        />\r\n      );\r\n    case typeEnums.MODEL:\r\n      return (\r\n        <SketchfabModel\r\n          initialParam={initialParam}\r\n          modelId={url}\r\n        />\r\n      );\r\n    case typeEnums.VIDEO:\r\n      return null;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nOverlay.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Overlay;\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { entitiesReducer, queriesReducer, queryMiddleware } from 'redux-query';\r\nimport superagentInterface from 'redux-query-interface-superagent';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport accountReducer from './slices/account';\r\nimport settingsReducer from './slices/settings';\r\nimport editorReducer from './slices/editor';\r\nimport homeReducer from './slices/home';\r\n\r\nexport const selectQueries = (state) => state.queries;\r\nexport const selectEntities = (state) => state.entities;\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['account', 'settings'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  account: accountReducer,\r\n  settings: settingsReducer,\r\n  editor: editorReducer,\r\n  entities: entitiesReducer,\r\n  queries: queriesReducer,\r\n  home: homeReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n    serializableCheck: false,\r\n  }).concat(queryMiddleware(superagentInterface, selectQueries, selectEntities)),\r\n});\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n","/* eslint-disable react/jsx-indent */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useState, useRef, Suspense } from 'react';\r\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\r\nimport { PerspectiveCamera, OrbitControls, useContextBridge } from '@react-three/drei';\r\nimport { useSelector, Provider, useStore } from 'react-redux';\r\nimport { editorSelectors } from '../../../state/slices/editor';\r\nimport TransformController from './TransformController';\r\nimport Image from './Image';\r\nimport Overlay from './Overlay';\r\nimport store from '../../../state/store';\r\n\r\nexport default function Scene() {\r\n  const overlays = useSelector(editorSelectors.selectOverlays);\r\n  const overlaySelection = useSelector(editorSelectors.selectOverlaySelection);\r\n  const controlMode = useSelector(editorSelectors.selectControlMode);\r\n  const markerSrc = useSelector(editorSelectors.selectMarkerSrc);\r\n\r\n  const selection = overlaySelection[0];\r\n\r\n  // Cameras\r\n  const camera = useRef();\r\n  const orbitRef = useRef();\r\n  const transformRef = useRef();\r\n\r\n  return (\r\n    <Canvas>\r\n      <Provider store={store}>\r\n        <PerspectiveCamera ref={camera} position={[0, 5, 6]} rotation={[0, 3.14 / 2, 0]} />\r\n        <ambientLight />\r\n        <pointLight position={[10, 10, 10]} />\r\n        {\r\n          overlays.map((overlay, index) => {\r\n            const { type, url } = overlay;\r\n\r\n            return ((index === selection)\r\n              ? (\r\n                <TransformController\r\n                  orbitRef={orbitRef}\r\n                  controlMode={controlMode}\r\n                  transformRef={transformRef}\r\n                >\r\n                  <Suspense fallback={null}>\r\n                    <Overlay\r\n                      id={index}\r\n                      type={type}\r\n                      url={url}\r\n                    />\r\n                  </Suspense>\r\n                </TransformController>\r\n              )\r\n              : (\r\n                <Suspense fallback={null}>\r\n                  <Overlay\r\n                    id={index}\r\n                    type={type}\r\n                    ref={null}\r\n                    url={url}\r\n                  />\r\n                </Suspense>\r\n              )\r\n            );\r\n          })\r\n        }\r\n        <Suspense fallback={null}>\r\n          <Image\r\n            initialParam={{\r\n              initialPosition: [0, 0, 0],\r\n              initialRotation: [-3.1415 / 2, 0, 0],\r\n              initialScale: [1, 1, 1],\r\n            }}\r\n            url={markerSrc}\r\n            fwdRef={null}\r\n          />\r\n        </Suspense>\r\n        <OrbitControls ref={orbitRef} />\r\n      </Provider>\r\n    </Canvas>\r\n\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport Scene from './fiber/Scene';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  viewport: {\r\n    backgroundColor: '#282c34',\r\n    flex: 3,\r\n  },\r\n}));\r\n\r\nexport default function EditorViewport() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.viewport}>\r\n      <Scene />\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IconButton, makeStyles, Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  iconTool: {\r\n    marginLeft: '10px',\r\n  },\r\n}));\r\n\r\nfunction IconTool({ toolName, icon, onClickCallback }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Tooltip title={toolName}>\r\n      <IconButton\r\n        className={classes.iconTool}\r\n        aria-label={toolName}\r\n        color=\"default\"\r\n        onClick={onClickCallback}\r\n      >\r\n        {icon}\r\n      </IconButton>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nIconTool.defaultProps = {\r\n  onClickCallback: () => null,\r\n};\r\n\r\nIconTool.propTypes = {\r\n  toolName: PropTypes.node.isRequired,\r\n  icon: PropTypes.node.isRequired,\r\n  onClickCallback: PropTypes.func,\r\n};\r\n\r\nexport default IconTool;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Divider, makeStyles } from '@material-ui/core';\r\n\r\nconst BORDER_RADIUS = 3;\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    borderRadius: BORDER_RADIUS,\r\n    backgroundColor: '#505050',\r\n  },\r\n  title: {\r\n    borderTopRightRadius: BORDER_RADIUS,\r\n    borderTopLeftRadius: BORDER_RADIUS,\r\n    display: 'flex',\r\n    color: 'white',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#404040',\r\n  },\r\n  body: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  footer: {\r\n  },\r\n}));\r\n\r\nfunction SideSubMenu({ title, options, children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.container} m={1}>\r\n      <Box className={classes.title}>\r\n        {title}\r\n      </Box>\r\n      <Divider />\r\n      <Box m={1} className={classes.body}>\r\n        {children}\r\n      </Box>\r\n      <Divider />\r\n      <Box className={classes.footer}>\r\n        {options}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nSideSubMenu.defaultProps = {\r\n  children: <div />,\r\n  options: <div />,\r\n};\r\nSideSubMenu.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n  options: PropTypes.node,\r\n};\r\n\r\nexport default SideSubMenu;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport { editorActions, editorSelectors } from '../../state/slices/editor';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  selected: {\r\n    marginTop: 4,\r\n    backgroundColor: '#7070A7',\r\n  },\r\n  normal: {\r\n    marginTop: 4,\r\n    backgroundColor: '#505050',\r\n  },\r\n}));\r\n\r\nfunction OverlayMenuItem({ id, nome }) {\r\n  const classes = useStyles();\r\n  const selected = useSelector(editorSelectors.selectOverlaySelection);\r\n  const style = (selected.includes(id)) ? classes.selected : classes.normal;\r\n  const store = useStore();\r\n\r\n  const handleClick = () => {\r\n    const payload = [id];\r\n    store.dispatch(editorActions.setOverlaySelection(payload));\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      className={style}\r\n      variant=\"contained\"\r\n      onClick={handleClick}\r\n      disableElevation\r\n    >\r\n      {nome}\r\n    </Button>\r\n  );\r\n}\r\n\r\nOverlayMenuItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  nome: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default OverlayMenuItem;\r\n","import React from 'react';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport { Box, IconButton, makeStyles } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\n\r\nimport SideSubMenu from './SideSubMenu';\r\nimport { editorActions, editorSelectors } from '../../state/slices/editor';\r\nimport OverlayMenuItem from './OverlayMenuItem';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nfunction OverlayMenu() {\r\n  const classes = useStyles();\r\n  const overlays = useSelector(editorSelectors.selectOverlays);\r\n  const store = useStore();\r\n\r\n  const handleAdd = () => store.dispatch(editorActions.setIsAddingOverlay(true));\r\n\r\n  const handleRemove = () => store.dispatch(editorActions.removeOverlay());\r\n\r\n  return (\r\n    <SideSubMenu\r\n      title=\"Overlays\"\r\n      options={(\r\n        <Box className={classes.container}>\r\n          <IconButton size=\"small\" onClick={handleAdd}>\r\n            <Add />\r\n          </IconButton>\r\n          <IconButton size=\"small\" onClick={handleRemove}>\r\n            <Remove />\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    >\r\n      {overlays.map((overlay, index) => <OverlayMenuItem key={String(index)} id={index} nome={`Overlay ${index}`} />)}\r\n    </SideSubMenu>\r\n  );\r\n}\r\n\r\nexport default OverlayMenu;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-console */\r\nimport TextField from '@material-ui/core/TextField';\r\nimport React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { editorActions, editorSelectors } from '../../state/slices/editor';\r\n\r\nfunction SceneTextField() {\r\n  const { name, isNewScene } = useSelector(editorSelectors.selectSceneState);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (e) => dispatch(editorActions.setName(e.target.value));\r\n\r\n  return (\r\n    <TextField\r\n      id=\"sceneName\"\r\n      value={name}\r\n      onChange={isNewScene ? onChange : null}\r\n    />\r\n  );\r\n}\r\n\r\nexport default SceneTextField;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  menu: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#121316',\r\n  },\r\n}));\r\n\r\nexport default function SideMenu({ children }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.menu}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\nSideMenu.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import { Button } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport channelRequests from '../../state/requests/channel';\r\nimport { accountSelectors } from '../../state/slices/account';\r\nimport { editorSelectors } from '../../state/slices/editor';\r\nimport { homeSelectors } from '../../state/slices/home';\r\n\r\nfunction SaveSceneButton() {\r\n  const accessToken = useSelector(accountSelectors.selectAccessToken);\r\n  const channels = useSelector(accountSelectors.selectChannelsMeta);\r\n  const channelIndex = useSelector(homeSelectors.selectSelectedChannelIndex);\r\n  const selectedChannel = channels[channelIndex];\r\n  const { sceneId, sceneInfo } = useSelector(editorSelectors.selectScene);\r\n  const request = channelRequests.updateScene({\r\n    accessToken,\r\n    channelId: selectedChannel.id,\r\n    sceneId,\r\n    scene: sceneInfo,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={() => {\r\n          axios(request)\r\n            .then(() => {})\r\n            .catch(() => {});\r\n        }}\r\n      >\r\n        Salvar Cena\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SaveSceneButton;\r\n","import { Box, makeStyles } from '@material-ui/core';\r\nimport { Cached, Height, OpenWith } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { useStore } from 'react-redux';\r\nimport ProfileDropdown from '../../components/ProfileDropdown';\r\nimport TopMenu from '../../components/TopMenu';\r\nimport { editorActions, modesEnum } from '../../state/slices/editor';\r\nimport AddOverlayModal from './modal/AddOverlayModal';\r\nimport EditorViewport from './EditorViewport';\r\nimport IconTool from './IconTool';\r\nimport OverlayMenu from './OverlayMenu';\r\nimport SceneTextField from './SceneTextField';\r\nimport SideMenu from './SideMenu';\r\nimport SideSubMenu from './SideSubMenu';\r\nimport SaveSceneButton from './SaveSceneButton';\r\nimport Logo from '../../components/Logo';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  horizontal: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    height: 'calc(100vh - 48px)',\r\n  },\r\n  toolbar: {\r\n    flex: 1000,\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  toolbarLeft: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    marginRight: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  toolbarCenter: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  toolbarRight: {\r\n    flex: 1,\r\n    display: 'flex',\r\n    marginLeft: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n  },\r\n}));\r\n\r\nexport default function Editor() {\r\n  const store = useStore();\r\n  const classes = useStyles();\r\n  const setControlMode = (mode) => store.dispatch(editorActions.setControlMode(mode));\r\n\r\n  return (\r\n    <div>\r\n      <TopMenu hideLogo>\r\n        <div className={classes.toolbar}>\r\n          <div className={classes.toolbarLeft}>\r\n            <Logo />\r\n            <IconTool\r\n              toolName=\"Translação\"\r\n              icon={<OpenWith />}\r\n              onClickCallback={() => setControlMode(modesEnum.TRANSLATE)}\r\n            />\r\n            <IconTool\r\n              toolName=\"Rotação\"\r\n              icon={<Cached />}\r\n              onClickCallback={() => setControlMode(modesEnum.ROTATE)}\r\n            />\r\n            <IconTool\r\n              toolName=\"Escala\"\r\n              icon={<Height />}\r\n              onClickCallback={() => setControlMode(modesEnum.SCALE)}\r\n            />\r\n          </div>\r\n          <div className={classes.toolbarCenter}>\r\n            <SceneTextField />\r\n          </div>\r\n          <div className={classes.toolbarRight}>\r\n            <ProfileDropdown />\r\n            <SaveSceneButton />\r\n          </div>\r\n        </div>\r\n      </TopMenu>\r\n      <Box className={classes.horizontal}>\r\n        <SideMenu>\r\n          <OverlayMenu />\r\n          <SideSubMenu title=\"Adicionar um Link\" />\r\n        </SideMenu>\r\n        <EditorViewport />\r\n        <SideMenu>\r\n          <SideSubMenu title=\"Info\" />\r\n        </SideMenu>\r\n      </Box>\r\n      <AddOverlayModal />\r\n    </div>\r\n  );\r\n}\r\n","import Editor from './Editor';\r\n\r\nexport default Editor;\r\n","import React, { useMemo } from 'react';\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  createTheme,\r\n  ThemeProvider,\r\n} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Login from './pages/login';\r\nimport Home from './pages/home';\r\nimport MarkerSelection from './pages/marker';\r\nimport Editor from './pages/editor';\r\nimport { accountSelectors } from './state/slices/account';\r\nimport { settingsSelectors } from './state/slices/settings';\r\n\r\nfunction RestrictedRoute({ children, isLoggedIn, ...rest }) {\r\n  return (\r\n    <Route\r\n      // eslint-disable-next-line react/jsx-props-no-spreading\r\n      {...rest}\r\n      render={\r\n        () => (isLoggedIn ? (children) : (<Redirect to=\"/login\" />))\r\n      }\r\n    />\r\n  );\r\n}\r\nRestrictedRoute.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction LoginRoute({ isLoggedIn, ...rest }) {\r\n  return (\r\n    <Route\r\n      // eslint-disable-next-line react/jsx-props-no-spreading\r\n      {...rest}\r\n      render={\r\n        () => (isLoggedIn ? (<Redirect to=\"/home\" />) : (<Login />))\r\n      }\r\n    />\r\n  );\r\n}\r\nLoginRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction Routes() {\r\n  const isLoggedIn = useSelector(accountSelectors.selectAccessToken) !== null;\r\n\r\n  return (\r\n    <Switch>\r\n      <LoginRoute isLoggedIn={isLoggedIn} path=\"/login\" />\r\n      <RestrictedRoute isLoggedIn={isLoggedIn} path=\"/home\"><Home /></RestrictedRoute>\r\n      <RestrictedRoute isLoggedIn={isLoggedIn} path=\"/marcador\"><MarkerSelection /></RestrictedRoute>\r\n      <RestrictedRoute isLoggedIn={isLoggedIn} path=\"/editor\"><Editor /></RestrictedRoute>\r\n      <Route\r\n        path=\"/\"\r\n        component={({ location }) => (\r\n          <Redirect\r\n            to={{\r\n              ...location,\r\n              pathname: '/home',\r\n            }}\r\n          />\r\n        )}\r\n      />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const paletteType = useSelector(settingsSelectors.selectPaletteType);\r\n\r\n  const theme = useMemo(\r\n    () => createTheme(\r\n      {\r\n        palette: {\r\n          type: paletteType,\r\n        },\r\n      },\r\n    ), [paletteType],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Routes />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable */\r\n\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { Provider as ReduxQueryProvider } from 'redux-query-react';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport store, { persistor } from './state/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst getQueries = (state) => state.queries;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReduxQueryProvider queriesSelector={getQueries}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <BrowserRouter>\r\n            <App />\r\n          </BrowserRouter>\r\n        </PersistGate>\r\n      </ReduxQueryProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}